<?xml version='1.0' encoding='UTF-8'?>
<!--
/**
 * Copyright (c) 2011, SOCIETIES Consortium
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following
 * conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,
 * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
 * SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @author jmgoncalves and tcarlyle
 */
 -->
<xs:schema targetNamespace='http://societies.org/api/schema/cis/community'
	elementFormDefault='qualified' xmlns:xs="http://www.w3.org/2001/XMLSchema"  
			xmlns:tns="http://societies.org/api/schema/cis/community" 
	xmlns="http://societies.org/api/schema/cis/community"
	
	xmlns:insact="http://societies.org/api/schema/activityfeed"
	xmlns:ins="http://societies.org/api/schema/activity"
	>

<xs:import namespace="http://societies.org/api/schema/activityfeed" 
           schemaLocation="org.societies.api.schema.activityfeed.xsd"/>

<xs:import namespace="http://societies.org/api/schema/activity" 
           schemaLocation="org.societies.api.schema.activity.xsd"/>
     
     <xs:element name='communityMethods'>
 	 <xs:complexType>
	 	 <xs:sequence>
	 	 
	 	    <!-- methods -->
			<xs:choice minOccurs='0' maxOccurs='1'>
				<xs:element ref='join'/>
				<xs:element ref='leave'/>
				<xs:element ref='invite'/>
				<xs:element ref='who'/>
				<xs:element ref='addMember'/>
				<xs:element ref='subscription'/>
				<xs:element ref='deleteMember'/>
				<xs:element ref='getInfo'/>
				<xs:element ref='setInfo'/>
				<xs:element ref='joinResponse'/>
				<xs:element ref='leaveResponse'/>
				<xs:element ref='addMemberResponse'/>
				<xs:element ref='deleteMemberResponse'/>
				<xs:element ref='getInfoResponse'/>
				<xs:element ref='setInfoResponse'/>
				<xs:element ref='insact:activityfeed'/>
				<xs:element ref='setMembershipCriteria'/>
				<xs:element ref='setMembershipCriteriaResponse'/>
				<xs:element ref='getMembershipCriteria'/>
				<xs:element ref='getMembershipCriteriaResponse'/>
				
				
<!-- 				<xs:element ref='deleteActivity'/>
				<xs:element ref='deleteActivityResponse'/>-->
			</xs:choice>
		</xs:sequence>
	 </xs:complexType>
	</xs:element>
     
           
 	<xs:element name='community'>
 	 <xs:complexType>
	 	 <xs:sequence>
			<xs:element ref='membershipCrit' minOccurs='0' maxOccurs='1'/>
		</xs:sequence>
	
		  <xs:attribute name='owner-jid' type='xs:string'/> 
          <xs:attribute name='community-jid' type='xs:string'/>  
          <xs:attribute name='community-type' type='xs:string'/>
          <xs:attribute name='community-name' type='xs:string'/> 
          <xs:attribute name='description' type='xs:string'/> 
	 </xs:complexType>
	</xs:element>
	
	<xs:element name='setMembershipCriteria'>
 	 <xs:complexType>
	 	 <xs:sequence>
			<xs:element ref='membershipCrit' minOccurs='0' maxOccurs='1'/>
		</xs:sequence>
	 </xs:complexType>
	</xs:element>
	
	<xs:element name='setMembershipCriteriaResponse'>
 	 <xs:complexType>
	 	 <xs:sequence>
			<xs:element ref='membershipCrit' minOccurs='0' maxOccurs='1'/>
		</xs:sequence>
		<xs:attribute name='result' type='xs:boolean'/>
	 </xs:complexType>
	</xs:element>
	
	<xs:element name='getMembershipCriteria' type='empty' />	
	<xs:element name='getMembershipCriteriaResponse'>
 	 <xs:complexType>
	 	 <xs:sequence>
			<xs:element ref='membershipCrit' minOccurs='0' maxOccurs='1'/>
		</xs:sequence>
	 </xs:complexType>
	</xs:element>

<!-- 
<xs:element name='community' >
	
	<xs:complexType>
			<xs:choice minOccurs='0' maxOccurs='1'>
				<xs:element ref='join'/>
				<xs:element ref='leave'/>
				<xs:element ref='invite'/>
				<xs:element ref='who'/>
				<xs:element ref='addMember'/>
				<xs:element ref='subscription'/>
				<xs:element ref='deleteMember'/>
				<xs:element ref='getInfo'/>
				<xs:element ref='setInfo'/>
				<xs:element ref='joinResponse'/>
				<xs:element ref='leaveResponse'/>
				<xs:element ref='addMemberResponse'/>
				<xs:element ref='deleteMemberResponse'/>
				<xs:element ref='getInfoResponse'/>
				<xs:element ref='setInfoResponse'/>
				<xs:element ref='getActivities'/>
				<xs:element ref='getActivitiesResponse'/>
				<xs:element ref='addActivity'/>
				<xs:element ref='addActivityResponse'/>
				<xs:element ref='cleanUpActivityFeed'/>
				<xs:element ref='cleanUpActivityFeedResponse'/>
				<xs:element ref='insact:activityfeed'/>

			
			</xs:choice>
		  <xs:attribute name='owner-jid' type='xs:string'/> 
          <xs:attribute name='community-jid' type='xs:string'/> 
          <xs:attribute name='owner-password' type='xs:string'/> 
          <xs:attribute name='community-type' type='xs:string'/>
          <xs:attribute name='community-name' type='xs:string'/> 
          <xs:attribute name='membership-mode' type='xs:int'/> 
          <xs:attribute name='description' type='xs:string'/> 
	</xs:complexType>
</xs:element>
-->


	<xs:element name='criteria'>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="attrib" type="xs:string" minOccurs="1" maxOccurs="1"/>
				<xs:element name="operator" type="xs:string" minOccurs="1" maxOccurs="1"/>
				<xs:element name="value1" type="xs:string" minOccurs="1" maxOccurs="1"/>
				<xs:element name="value2" type="xs:string" minOccurs="0" maxOccurs="1"/>
				<xs:element name="rank" type="xs:int" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>



	<xs:element name='membershipCrit'>
		<xs:complexType>
			<xs:sequence minOccurs='0' maxOccurs='unbounded'>
				<xs:element ref='criteria'/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>



	<xs:element name='qualification'>
		<xs:complexType>
			<xs:attribute name='attrib' type='xs:string'/>
			<xs:attribute name='value' type='xs:string'/>
		</xs:complexType>
	</xs:element>




	<xs:element name='subscription'>
		<xs:complexType>
			<xs:sequence minOccurs='1' maxOccurs='1'>
				<xs:element ref='participant'/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:element name='joinResponse'>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref='participant' minOccurs='0' maxOccurs='1'/>
				<xs:element ref='community' minOccurs='1' maxOccurs='1'/>
			</xs:sequence>
			<xs:attribute name='result' type='xs:boolean'/>
		</xs:complexType>
	</xs:element>

	<xs:element name='leaveResponse'>
		<xs:complexType>
			<xs:attribute name='result' type='xs:boolean'/>
		</xs:complexType>
	</xs:element>

	<xs:element name='addMemberResponse'>
		<xs:complexType>
			<xs:sequence minOccurs='1' maxOccurs='1'>
				<xs:element ref='participant'/>
			</xs:sequence>
			<xs:attribute name='result' type='xs:boolean'/>
		</xs:complexType>
	</xs:element>
	<xs:element name='deleteMemberResponse'>
		<xs:complexType>
			<xs:sequence minOccurs='1' maxOccurs='1'>
				<xs:element ref='participant'/>
			</xs:sequence>
			<xs:attribute name='result' type='xs:boolean'/>
		</xs:complexType>
	</xs:element>

	<xs:element name='participant'>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base='empty'>
					<xs:attribute name='jid' type='xs:string' use='required'/>
					<xs:attribute name='role' type='tns:participantRole'/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	
	
	<xs:simpleType name="participantRole">
 		 <xs:restriction base="xs:string">
		    <xs:enumeration value="owner"/>
		    <xs:enumeration value="admin"/>
		    <xs:enumeration value="participant"/>
		    <!-- and so on ... -->
		 </xs:restriction>
	</xs:simpleType>
	
	
	<xs:element name='getInfo' type='empty' />	

	<xs:element name='setInfo'>
		<xs:complexType>
			<xs:sequence minOccurs='1' maxOccurs='1'>
				<xs:element ref='community'/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name='getInfoResponse'>
		<xs:complexType>
			<xs:sequence minOccurs='1' maxOccurs='1'>
				<xs:element ref='community'/>
			</xs:sequence>
			<xs:attribute name='result' type='xs:boolean'/>
		</xs:complexType>
	</xs:element>
	
	<xs:element name='setInfoResponse'>
		<xs:complexType>
			<xs:sequence minOccurs='1' maxOccurs='1'>
				<xs:element ref='community'/>
			</xs:sequence>
			<xs:attribute name='result' type='xs:boolean'/>
		</xs:complexType>
	</xs:element>
<!--	<xs:element name='join' >
		<xs:complexType>
 		<xs:sequence>
				<xs:element ref='participant'/>
			</xs:sequence> 
		</xs:complexType>
	</xs:element>-->
	
	<xs:element name='join'>		
		<xs:complexType>
			<xs:sequence minOccurs='0' maxOccurs='unbounded'>
				<xs:element ref='qualification'/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	
	<xs:element name='leave' type='empty' />
	<xs:element name='invite'>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base='empty'>
					<xs:attribute name='jid' type='xs:string' use='required'/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name='who'>
		<xs:complexType>
			<xs:sequence minOccurs='0' maxOccurs='unbounded'>
				<xs:element ref='participant'/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name='addMember'>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref='participant'/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name='deleteMember'>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref='participant'/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>

	<xs:simpleType name='empty'>
		<xs:restriction base='xs:string'>
			<xs:enumeration value=''/>
		</xs:restriction>
	</xs:simpleType>

</xs:schema>