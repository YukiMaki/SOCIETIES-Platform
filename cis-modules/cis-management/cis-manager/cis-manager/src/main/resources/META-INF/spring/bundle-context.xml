<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/osgi 
    http://www.springframework.org/schema/osgi/spring-osgi-1.2.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
  

  <!-- regular spring configuration file defining the beans for this
       bundle. We've kept the osgi definitions in a separate 
       configuration file so that this file can easily be used
       for integration testing outside of an OSGi environment -->

  <context:component-scan base-package="org.societies.cis.manager"></context:component-scan>
   <context:annotation-config />
    <tx:annotation-driven />
<!--     <bean id="ServiceRegPropConfig" -->
<!--         class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" > -->

<!--         <property name="ignoreResourceNotFound" value="false" > </property> -->

<!--         <property name="locations" > -->
<!--             <list> -->
<!--                 <value>classpath:/derby_database.properties</value> -->
<!--                 <value>file:${VIRGO_HOME}\config\org.societies.platform.properties</value> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />		
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- local testing -->
				<value>classpath:META-INF/spring/derby_database.properties</value>
				<!-- final deployment into server --> 
				<value>file:${CONFIG_DIR}\org.societies.platform.properties</value>
			</list>
		</property>
	</bean>


    <bean
        id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean" >

        <property name="dataSource" ref="societiesDataSource" />
        <property name="annotatedClasses" >
            <list>
                <value>org.societies.cis.manager.Cis</value>
                <value>org.societies.cis.manager.CisRecord</value>
                <value>org.societies.cis.manager.CisParticipant</value>
                <value>org.societies.activity.model.Activity</value>
                <value>org.societies.activity.ActivityFeed</value>
            </list>
        </property>

        <property name="annotatedPackages" >

            <list>
                <value>org.societies.cis.manager</value>
                <value>org.societies.cis.activity</value>
            </list>
        </property>

        <property name="hibernateProperties" >
            <props>
                <prop key="hibernate.show_sql" >true</prop>
                <prop key="hibernate.cache.use_second_level_cache" >false</prop>
                <prop key="hibernate.hbm2ddl.auto" >create-drop</prop>
                <prop key="hibernate.format_sql" >true</prop>
                <prop key="hibernate.query.factory_class">org.hibernate.hql.classic.ClassicQueryTranslatorFactory</prop>

            </props>
        </property>
    </bean>
    <!-- enable the configuration of transactional behavior based on annotations -->

    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager" >
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="CisManagementBundle" class="org.societies.cis.manager.CisManager" >
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
   <!-- <bean id="CisClientService" 
    	class="org.societies.cis.manager.CisManagerClient">
    	<constructor-arg ref="CisManagementBundle"/>
    </bean>-->
    
</beans>